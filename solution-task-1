CREATE TABLE IF NOT EXISTS main 
( 
 t1 INTEGER
);

CREATE UNIQUE INDEX IF NOT EXISTS main_idx ON main (t1);

CREATE TABLE IF NOT EXISTS main 
( 
 t1 INTEGER,
  UNIQUE(t1) 
);

CREATE TABLE IF NOT EXISTS MAINLOG 
(
logdata VARCHAR(512)
);

--Поскольку автономной транзации нет по условию задачи - приходится мудрить
CREATE EXTENSION IF NOT EXISTS dblink
    SCHEMA public
    VERSION "1.2";


   SELECT dblink_connect('con','host=127.0.0.1 dbname=postgres user=postgres password=qwerty');



CREATE OR REPLACE FUNCTION MAIN_LOG (IN pResult VARCHAR)
RETURNS void AS
$$
DECLARE
  INSERT_SQL text := 'INSERT INTO MAINLOG (logdata) VALUES (''[MESSAGE]'')';
BEGIN
  --Замена DML-запросе значения
  INSERT_SQL := replace(INSERT_SQL, '[MESSAGE]', pResult);
  
  --Посылаем по ДБ линку ИНСЕРТ, тем самым формируем автономность транзакции
  PERFORM dblink_exec('con', INSERT_SQL);
  WHEN OTHERS
  THEN NULL;
END;
$$ LANGUAGE 'plpgsql';

CREATE OR REPLACE FUNCTION MAIN_INS (IN pT1 INTEGER)
RETURNS void AS
$$
DECLARE
BEGIN
  INSERT INTO main(t1) VALUES(pT1);
  PERFORM MAIN_LOG('Insert Ok');	

EXCEPTION
  WHEN OTHERS THEN
      PERFORM MAIN_LOG(SUBSTRING('Insert exception, error code=' || SQLSTATE || ' time:'|| to_char(now(),'YYYY-MM-DD hh:mi') || ', errmsg ' || SQLERRM ,1,500));
--  
end; 
$$ language plpgsql;

DO $$DECLARE r record;
BEGIN
   PERFORM MAIN_INS(1);
   PERFORM MAIN_INS(1);
   commit;	
END$$;

select * from main
select * from mainlog

DELETE FROM main;
DELETE FROM mainlog;

DROP TABLE main;
DROP TABLE MAINLOG;
DROP FUNCTION MAIN_LOG;
DROP FUNCTION MAIN_INS;
DROP EXTENSION dblink;

